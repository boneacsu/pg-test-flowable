<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:flowable="http://flowable.org/bpmn"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC"
             xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema"
             expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.flowable.org/processdef">

    <process id="complexVariableProcess" name="complex variable process" isExecutable="true">
        <startEvent id="start" name="start" flowable:initiator="initiator"/>

        <sequenceFlow sourceRef="start" targetRef="serviceTask1"/>

        <serviceTask id="serviceTask1" name="Service Task 1"
                  flowable:expression="#{complexService.processMap(map)}"/>

        <sequenceFlow sourceRef="serviceTask1" targetRef="serviceTaskInterim"/>

        <serviceTask id="serviceTaskInterim" name="Service Task Interim"
                     flowable:expression="#{complexService.createComplexObject(execution)}"
                     activiti:resultVariable="complexObjectVarRef"/>

        <sequenceFlow sourceRef="serviceTaskInterim" targetRef="serviceTask2"/>

        <serviceTask id="serviceTask2" name="service task 2"
                     flowable:expression="#{complexService.processComplexObject(complexObjectVarRef)}"/>

        <sequenceFlow sourceRef="serviceTask2" targetRef="serviceTask3"/>

        <serviceTask id="serviceTask3" name="service task 3"
                     flowable:expression="#{complexService.produceInterimProcessVar(execution)}"/>

        <sequenceFlow sourceRef="serviceTask3" targetRef="serviceTask4"/>

        <serviceTask id="serviceTask4" name="service task 4"
                     flowable:expression="#{complexService.consumeInterimProcessVar(execution)}"/>

        <sequenceFlow sourceRef="serviceTask4" targetRef="end-event"/>

        <endEvent id="end-event" name="end"/>

    </process>
</definitions>